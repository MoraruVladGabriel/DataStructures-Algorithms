Tree
-Every item in the tree is a node
-The node at the top of the tree is the root
-Every non-root node has one and only one parent
-A leaf node has no children
-A singleton tree has only one node - the root

Binary Tree
-Every node has 0, 1, or 2 children
-Children are referred to as left child and right child
-In practice, we use binary search tree

Binary Search Tree (BST)
-Can perform insertions, deletions, and retrievals in O(logn) time
-The left child always has a smaller value than its parent
-The right child always has a larger value than its parent
-This means everything to the left of the root is less than the value of the root,
    and everything to the right of the root is greater than the value of the root
-Because of that, we can do a binary search

Traversal
-Level - visit nodes on each level
-Pre-order-visit the root of every subtree first
-Post-order-visit the root of every subtree last
-In-order-visit left child, then root, then right child
